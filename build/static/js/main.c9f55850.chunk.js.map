{"version":3,"sources":["service/ApiService.js","components/TableRow.js","components/Table.js","components/SearchInput.js","components/SelectRegion.js","components/Loading.js","components/App.js","index.js"],"names":["ApiService","_baseUrl","getCountries","a","getResource","res","map","_formatCountry","url","this","fetch","ok","Error","status","json","country","index","number","code","alpha3Code","name","capital","region","population","area","currencies","value","join","TableRow","Fragment","scope","Table","props","rows","countries","className","SearchInput","onChange","e","onSearchText","text","target","htmlFor","type","id","Component","SelectRegion","onSelectRegion","options","regions","selected","Loading","App","api","state","searchText","searchRegion","loading","trim","setState","filterSelectRegion","filter","then","getRegions","result","includes","push","toLowerCase","length","indexOf","filterSearchText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9f55850.chunk.js","sourcesContent":["\nexport default class ApiService {\n    _baseUrl = 'https://restcountries.eu/rest/v2/all';\n\n    async getResource() {\n        let url = this._baseUrl;\n        const res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    }\n\n    getCountries = async () => {\n        let res = await this.getResource();\n        return res.map(this._formatCountry);\n    }\n\n    _formatCountry(country, index) {\n        return {\n            number: index + 1,\n            code: country.alpha3Code,\n            name: country.name,\n            capital: country.capital,\n            region: country.region,\n            population: country.population,\n            area: country.area,\n            currencies: country.currencies.map(value => value.name).join(', '),\n        }\n    }\n}","import React from \"react\";\n\nfunction TableRow({country}) {\n    let {number, name, capital, region, population, area, currencies } = country;\n\n    return <React.Fragment>\n        <th scope=\"row\">{number}</th>\n        <td>{name}</td>\n        <td>{capital}</td>\n        <td>{region}</td>\n        <td>{population}</td>\n        <td>{area}</td>\n        <td>{currencies}</td>\n    </React.Fragment>\n}\n\nexport default TableRow;","import React from \"react\";\nimport TableRow from \"./TableRow\";\n\nfunction Table(props) {\n    let rows = this.props.countries.map(country => {\n        return <tr key={country.code}><TableRow country={country} /></tr>\n    });\n\n    return <table className=\"table table-striped table-hover table-bordered\">\n        <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Capital</th>\n            <th scope=\"col\">Region</th>\n            <th scope=\"col\">Population</th>\n            <th scope=\"col\">Area</th>\n            <th scope=\"col\">Currencies</th>\n        </tr>\n        </thead>\n        <tbody>\n        {rows}\n        </tbody>\n    </table>\n}\n\nexport default Table;","import React, { Component } from \"react\";\n\nexport default class SearchInput extends Component {\n\n    onChange = (e) => {\n        const {onSearchText = text => {}} = this.props;\n        onSearchText(e.target.value);\n    }\n\n    render() {\n        return <div className=\"form-group row\">\n            <label htmlFor=\"inputSearch\" className=\"col-sm-2 col-form-label\">Search</label>\n            <div className=\"col-sm-10\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"inputSearch\"\n                    onChange={this.onChange}\n                    value={this.props.text}/>\n            </div>\n        </div>\n    }\n}","import React, { Component } from \"react\";\n\nexport default class SelectRegion extends Component {\n\n    onChange = (e) => {\n        const { onSelectRegion = value => {} } = this.props\n        onSelectRegion(e.target.value);\n    }\n\n    render() {\n        let options = this.props.regions.map(region => {\n            return <option key={region} value={region}>{region}</option>\n        })\n\n        return <div className=\"form-group row\">\n            <label htmlFor=\"selectSearch\" className=\"col-sm-2 col-form-label\">Region</label>\n            <div className=\"col-sm-10\">\n                <select className=\"custom-select\" value={this.props.selected} onChange={this.onChange}>\n                    <option>-</option>\n                    {options}\n                </select>\n            </div>\n        </div>\n    }\n}","import React from \"react\";\nimport './Loading.css';\n\nfunction Loading() {\n    return <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n}\n\nexport default Loading;","import React, { Component } from \"react\";\nimport ApiService from \"../service/ApiService\";\nimport Table from \"./Table\";\nimport SearchInput from \"./SearchInput\";\nimport SelectRegion from \"./SelectRegion\";\nimport Loading from \"./Loading\";\n\nexport default class App extends Component {\n    api = new ApiService();\n\n    state = {\n        countries: [],\n        searchText: '',\n        regions: [],\n        searchRegion: '-',\n        loading: true,\n    }\n\n    componentDidMount() {\n        this.api.getCountries().then((countries) => {\n            this.setState({\n                countries,\n                regions: this.getRegions(countries),\n                loading: false,\n            })\n        });\n    }\n\n    getRegions(countries) {\n        let result = [];\n\n        for (let country of countries) {\n            if (!result.includes(country.region)) {\n                result.push(country.region);\n            }\n        }\n\n        return result;\n    }\n\n    onSearchText = (searchText) => {\n        searchText = searchText.trim();\n        this.setState({searchText, searchRegion: '-'});\n    }\n\n    onSelectRegion = (searchRegion) => {\n        this.setState({searchRegion, searchText: ''});\n    }\n\n    filterSelectRegion = (countries, searchRegion) => {\n        if (searchRegion === '-') {\n            return countries;\n        }\n        return countries.filter(country => country.region === searchRegion);\n    }\n\n    filterSearchText(countries, searchText) {\n        searchText = searchText.toLowerCase();\n        if (!searchText.length) {\n            return countries;\n        }\n        return countries.filter(country => {\n            const {name, capital, region} = country;\n            return name.toLowerCase().indexOf(searchText) > -1 ||\n                capital.toLowerCase().indexOf(searchText) > -1 ||\n                region.toLowerCase().indexOf(searchText) > -1;\n        });\n    }\n\n    render() {\n        let {countries, regions, searchText, searchRegion, loading} = this.state;\n        if (loading) {\n            return <Loading />\n        }\n        countries = this.filterSearchText(this.filterSelectRegion(countries, searchRegion), searchText);\n\n        return <div className=\"container\">\n            <h1>Countries</h1>\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <SearchInput text={searchText} onSearchText={this.onSearchText}/>\n                </div>\n                <div className=\"col-md-6\">\n                    <SelectRegion regions={regions} selected={searchRegion} onSelectRegion={this.onSelectRegion} />\n                </div>\n            </div>\n            <Table countries={countries}/>\n        </div>;\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}